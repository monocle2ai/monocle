name: Publish All Packages to JFrog

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build from (defaults to main)'
        required: false
        default: 'main'
        type: string
      version:
        description: 'Version for all packages (beta/alpha versions allowed). If empty, uses existing versions.'
        required: false
        type: string

jobs:
  publish-apptrace:
    name: Publish monocle_apptrace
    uses: ./.github/workflows/publish-to-jfrog.yml
    with:
      branch: ${{ inputs.branch || 'main' }}
      version: ${{ inputs.version }}
      artifact_path: 'apptrace'
      artifact_name: 'monocle_apptrace'

  publish-mcp:
    name: Publish monocle_mcp
    uses: ./.github/workflows/publish-to-jfrog.yml
    needs: publish-apptrace  # Ensure apptrace is published first as it's a dependency
    with:
      branch: ${{ inputs.branch || 'main' }}
      version: ${{ inputs.version }}
      artifact_path: 'mcp'
      artifact_name: 'monocle_mcp'

  publish-test-tools:
    name: Publish monocle_test_tools
    uses: ./.github/workflows/publish-to-jfrog.yml
    needs: publish-apptrace  # Ensure apptrace is published first as it may be a dependency
    with:
      branch: ${{ inputs.branch || 'main' }}
      version: ${{ inputs.version }}
      artifact_path: 'test_tools'
      artifact_name: 'monocle_test_tools'

  summary:
    name: Publication Summary
    runs-on: ubuntu-latest
    needs: [publish-apptrace, publish-mcp, publish-test-tools]
    if: always()
    steps:
      - name: üìã Final Summary
        run: |
          echo "## üì¶ Publication Summary"
          echo ""
          
          if [[ "${{ needs.publish-apptrace.result }}" == "success" ]]; then
            echo "‚úÖ monocle_apptrace - Published successfully"
          else
            echo "‚ùå monocle_apptrace - Failed to publish"
          fi
          
          if [[ "${{ needs.publish-mcp.result }}" == "success" ]]; then
            echo "‚úÖ monocle_mcp - Published successfully"
          else
            echo "‚ùå monocle_mcp - Failed to publish"
          fi
          
          if [[ "${{ needs.publish-test-tools.result }}" == "success" ]]; then
            echo "‚úÖ monocle_test_tools - Published successfully"
          else
            echo "‚ùå monocle_test_tools - Failed to publish"
          fi
          
          echo ""
          if [[ -n "${{ github.event.inputs.version }}" ]]; then
            echo "üè∑Ô∏è Version: ${{ github.event.inputs.version }}"
          else
            echo "üè∑Ô∏è Version: Using existing versions from pyproject.toml files"
          fi
          echo "üåø Branch: ${{ github.event.inputs.branch || github.ref_name }}"