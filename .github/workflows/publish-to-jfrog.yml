name: Publish to JFrog

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build from (defaults to main)'
        required: false
        default: 'main'
        type: string
      version:
        description: 'Version of the package to release (beta/alpha versions allowed)'
        required: false
        type: string

jobs:
  publish-to-jfrog:
    environment: Build
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && inputs.branch || github.ref }}

      - name: 🔎 Validate version format
      # valid versions are. 0.5.0, 0.5.0a1, 0.5.0b1
        run: |
          version="${{ inputs.version }}"
          if ! [[ "$version" =~ ^[0-9]+\.[0-9]+\.[0-9]+([ab][0-9]+)?$ ]]; then
            echo "::error::Invalid version format: $version. Use formats like 0.5.0, 0.5.0a1, or 0.5.0b1"
            exit 1
          fi
          echo "✅ Version format is valid: $version"

      - name: 📝 Update version in pyproject.toml
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            version="${{ inputs.version || '5.0.0b25' }}"
            sed -i "s/^version = .*/version = \"$version\"/" pyproject.toml
            echo "✅ Updated version to $version in pyproject.toml"
          fi
          echo "🔍 Current pyproject.toml content:"
          grep '^version = ' pyproject.toml

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: ⚙️ Build wheels
        run: |
          chmod +x ./.github/scripts/build.sh
          ./.github/scripts/build.sh
          echo "✅ Build completed. Artifacts in dist/:"
          ls -lh dist/

      - name: 📦 Install Twine
        run: pip install --quiet --upgrade twine

      - name: 🚀 Publish to JFrog
        env:
          JFROG_URL: ${{ secrets.JFROG_REPOSITORY_URL }}
          JFROG_USERNAME: ${{ secrets.JFROG_USERNAME }}
          JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
        run: |
          if [[ -z "$JFROG_URL" ]]; then
            echo "::error::JFROG_REPOSITORY_URL secret is not set"
            exit 1
          fi
          if [[ -z "$JFROG_USERNAME" ]]; then
            echo "::error::JFROG_USERNAME secret is not set"
            exit 1
          fi
          if [[ -z "$JFROG_PASSWORD" ]]; then
            echo "::error::JFROG_PASSWORD secret is not set"
            exit 1
          fi
          
          echo "🔑 Authenticated as $JFROG_USERNAME"
          echo "🌐 Publishing to: $JFROG_URL"
          python3 -m twine upload \
            --repository-url "$JFROG_URL" dist/* \
            --username "$JFROG_USERNAME" --password "$JFROG_PASSWORD"

      - name: 📋 Summary
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            version="${{ inputs.version }}"
            branch="${{ inputs.branch || 'main' }}"
          else
            version=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
            branch="${{ github.ref_name }}"
          fi
          echo "✅ Successfully published version: $version"
          echo "📦 Source branch: $branch"
          echo "🏗️ Uploaded artifacts from: dist/"
